{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolLabs\\\\146_lab3\\\\react-task-tracker-occena\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Add a task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  const name = \"Mark\"; //test constant variable\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }, this) : 'No Tasks to Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","name","length"],"sources":["D:/SchoolLabs/146_lab3/react-task-tracker-occena/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  },[])\n\n  //Fetch Tasks\n  const fetchTasks = async() => { \n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n//Add a task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 100) + 1\n  const newTask = { id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n    // Delete Task\n    const deleteTask = (id) => {\n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    //Toggle Reminder\n    const toggleReminder = (id) => {\n      setTasks(\n        tasks.map((task) => \n          task.id === id ? { ...task, reminder: !task.reminder} : task\n        )\n      )\n    }\n\nconst name = \"Mark\" //test constant variable\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n      (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) \n      : ('No Tasks to Show')}\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,YAAW;MAC1B,MAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;MACAH,QAAQ,CAACE,eAAD,CAAR;IACD,CAHD;;IAKAD,QAAQ;EACT,CAPQ,EAOP,EAPO,CAAT,CALa,CAcb;;EACA,MAAME,UAAU,GAAG,YAAW;IAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IACA,OAAOD,IAAP;EACD,CAJD,CAfa,CAqBf;;;EACA,MAAME,OAAO,GAAIC,IAAD,IAAU;IACxB,MAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAA7C;IACA,MAAMC,OAAO,GAAG;MAAEJ,EAAF;MAAM,GAAGD;IAAT,CAAhB;IACAT,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;EACD,CAJD,CAtBe,CA4BX;;;EACA,MAAMC,UAAU,GAAIL,EAAD,IAAQ;IACzBV,QAAQ,CAACD,KAAK,CAACiB,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;EACD,CAFD,CA7BW,CAiCX;;;EACA,MAAMO,cAAc,GAAIP,EAAD,IAAQ;IAC7BV,QAAQ,CACND,KAAK,CAACmB,GAAN,CAAWT,IAAD,IACRA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;MAAWU,QAAQ,EAAE,CAACV,IAAI,CAACU;IAA3B,CAAjB,GAAwDV,IAD1D,CADM,CAAR;EAKD,CAND;;EAQJ,MAAMW,IAAI,GAAG,MAAb,CA1Ce,CA0CK;;EAElB,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAE,MAAMtB,cAAc,CAAC,CAACD,WAAF,CAAnC;MACA,OAAO,EAAEA;IADT;MAAA;MAAA;MAAA;IAAA,QADF,EAIGA,WAAW,iBAAI,QAAC,OAAD;MAAS,KAAK,EAAEW;IAAhB;MAAA;MAAA;MAAA;IAAA,QAJlB,EAKGT,KAAK,CAACsB,MAAN,GAAe,CAAf,gBACA,QAAC,KAAD;MAAO,KAAK,EAAEtB,KAAd;MAAqB,QAAQ,EAAEgB,UAA/B;MAA2C,QAAQ,EAAEE;IAArD;MAAA;MAAA;MAAA;IAAA,QADA,GAEE,kBAPL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAxDQrB,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}