{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolLabs\\\\146_lab3\\\\react-task-tracker-occena\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Fetch Task\n\n\n  const fetchTask = async () => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add a task\n\n\n  const addTask = async task => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() * 100) + 1\n    // const newTask = { id, ...task}\n    // setTasks([...tasks, newTask])\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: `DELETE`\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  const name = \"Mark\"; //test constant variable\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }, this) : 'No Tasks to Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","map","reminder","name","length"],"sources":["D:/SchoolLabs/146_lab3/react-task-tracker-occena/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  },[])\n\n  //Fetch Tasks\n  const fetchTasks = async() => { \n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async() => { \n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  \n//Add a task\nconst addTask = async(task) => {\n  const res = await fetch(`http://localhost:5000/tasks`,{ method: 'POST',\n  headers: {\n    'Content-type': 'application/json',\n  },\n  body: JSON.stringify(task),\n})\n\n  const data = await(res.json())\n\n  setTasks([...tasks, data])\n\n\n\n  // const id = Math.floor(Math.random() * 100) + 1\n  // const newTask = { id, ...task}\n  // setTasks([...tasks, newTask])\n}\n\n    // Delete Task\n    const deleteTask = async(id) => {\n      await fetch(`http://localhost:5000/tasks/${id}`,{\n        method: `DELETE`,\n      })\n      \n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    //Toggle Reminder\n    const toggleReminder = (id) => {\n      setTasks(\n        tasks.map((task) => \n          task.id === id ? { ...task, reminder: !task.reminder} : task\n        )\n      )\n    }\n\nconst name = \"Mark\" //test constant variable\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n      (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) \n      : ('No Tasks to Show')}\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}