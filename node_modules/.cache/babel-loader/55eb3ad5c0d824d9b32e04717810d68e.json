{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolLabs\\\\146_lab3\\\\react-task-tracker-occena\\\\src\\\\components\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const [task, setTasks] = useState([{\n    id: 1,\n    text: 'Dentist Appointment',\n    day: 'May 19th at 3:00pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Attorney Appointment',\n    day: 'May 20th at 2:00pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Psychiatirist Appointment',\n    day: 'May 21st at 1:00pm',\n    reminder: true\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n\n_s(Tasks, \"9TUQhccAHpI/cE+FK2z03p6/5bE=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","Tasks","task","setTasks","id","text","day","reminder","tasks","map"],"sources":["D:/SchoolLabs/146_lab3/react-task-tracker-occena/src/components/Tasks.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nconst Tasks = () => {\r\n    const [task, setTasks] = useState(\r\n        [\r\n            {\r\n                id: 1,\r\n                text: 'Dentist Appointment',\r\n                day: 'May 19th at 3:00pm',\r\n                reminder: true,\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'Attorney Appointment',\r\n                day: 'May 20th at 2:00pm',\r\n                reminder: true,\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'Psychiatirist Appointment',\r\n                day: 'May 21st at 1:00pm',\r\n                reminder: true,\r\n            },\r\n        ]\r\n        \r\n    )\r\n\r\n  return (\r\n    <>\r\n        {tasks.map((task) => (\r\n            <h3 key={task.id}>{task.text}</h3>\r\n\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAC7B,CACI;IACII,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,qBAFV;IAGIC,GAAG,EAAE,oBAHT;IAIIC,QAAQ,EAAE;EAJd,CADJ,EAOI;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,sBAFV;IAGIC,GAAG,EAAE,oBAHT;IAIIC,QAAQ,EAAE;EAJd,CAPJ,EAaI;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,2BAFV;IAGIC,GAAG,EAAE,oBAHT;IAIIC,QAAQ,EAAE;EAJd,CAbJ,CAD6B,CAAjC;EAwBF,oBACE;IAAA,UACKC,KAAK,CAACC,GAAN,CAAWP,IAAD,iBACP;MAAA,UAAmBA,IAAI,CAACG;IAAxB,GAASH,IAAI,CAACE,EAAd;MAAA;MAAA;MAAA;IAAA,QADH;EADL,iBADF;AAQD,CAjCD;;GAAMH,K;;KAAAA,K;AAmCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}